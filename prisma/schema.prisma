generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int       @id @default(autoincrement())
  role           Role      @default(USER)
  name           String?
  email          String    @unique
  emailVerified  DateTime?
  image          String?
  hashedPassword String?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  accounts       Account[]
}

model Account {
  id                Int     @id @default(autoincrement())
  userId            Int
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Series {
  id           Int        @id @default(autoincrement())
  title        String
  thumbnail    String
  directorName String
  sumary       String
  rating       Float?
  relaseDate   DateTime   @db.Date
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  Episode      Episode[]  @relation("Episode")
  category     Category[] @relation("CategoryToSeries")
}

model Episode {
  id         Int    @id @default(autoincrement())
  Episode    String
  seriesId   Int
  seriesName Series @relation("Episode", fields: [seriesId], references: [id])
}

model Category {
  id       Int      @id @default(autoincrement())
  category String
  series   Series[] @relation("CategoryToSeries")
}

enum Role {
  ADMIN
  USER
  PUBLISHER
}
